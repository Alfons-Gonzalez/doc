## Docker Swarm

# Tenim 3 maquines instal.lades amb centos 7 i docker

# Xarxa:

# manager: 

manager: dock0: 172.20.16.91
worker1: dock1: 172.20.16.92
worker2: dock2: 172.20.16.93

A tots tres hem afegit la regla de firewall:

firewall-cmd --add-rich-rule='rule family=ipv4 source address=172.20.16.0/24 accept' --permanent


# Al manager inicialitzem el swarm: 

[root@dock0 ~]# docker swarm init --advertise-addr 172.20.16.91
Swarm initialized: current node (bhcmk3hacntes6onmjixb9afx) is now a manager.

To add a worker to this swarm, run the following command:

    docker swarm join --token SWMTKN-1-2r6fu2yf60qlcnncaphdi7ckp0rh7rhqsq6xtq7110swt4h57j-4i5igxiafahzlgyu6pe7vidst 172.20.16.91:2377

To add a manager to this swarm, run 'docker swarm join-token manager' and follow the instructions.

[root@dock0 ~]#

# comprovem

[root@dock0 ~]# docker info | grep -i swarm
WARNING: devicemapper: usage of loopback devices is strongly discouraged for production use.
         Use `--storage-opt dm.thinpooldev` to specify a custom block storage device.
Swarm: active
[root@dock0 ~]#

[root@dock0 ~]# docker node ls
ID                            HOSTNAME            STATUS              AVAILABILITY        MANAGER STATUS
bhcmk3hacntes6onmjixb9afx *   dock0               Ready               Active              Leader
[root@dock0 ~]#


# anem a un dels workers i executem la comanda anterior

[root@dock1 ~]# docker swarm join --token SWMTKN-1-2r6fu2yf60qlcnncaphdi7ckp0rh7rhqsq6xtq7110swt4h57j-4i5igxiafahzlgyu6pe7vidst 172.20.16.91:2377
This node joined a swarm as a worker.
[root@dock1 ~]#

#si haguessim perdut la linea del token i no sabem que hem de fer, podriem executar, desde el manager:

docker swarm join-token worker

# i ens donaria les intruccions

# fem el mateix al worker2, quan esta afegit veiem al manager:

[root@dock0 ~]# docker node ls
ID                            HOSTNAME            STATUS              AVAILABILITY        MANAGER STATUS
bhcmk3hacntes6onmjixb9afx *   dock0               Ready               Active              Leader
8pbzb0kiyg7y4gpe1jv9oslyu     dock1               Ready               Active              
o3q9iuvm1ey65lsavlcclddkd     dock2               Ready               Active              
[root@dock0 ~]# 


# deploy de un servei

#A manager1


[root@dock0 ~]# docker service create --replicas 1 --name helloworld alpine ping docker.com
yxqkqhw7j4vf2j3c9wjcys5oa
overall progress: 1 out of 1 tasks 
1/1: running   
verify: Service converged 
[root@dock0 ~]#

# mirem que esta en marxa

[root@dock0 ~]# docker service ls
ID                  NAME                MODE                REPLICAS            IMAGE               PORTS
yxqkqhw7j4vf        helloworld          replicated          1/1                 alpine:latest       
[root@dock0 ~]#


# inspect the service

[root@dock0 ~]# docker service inspect --pretty helloworld

ID:		yxqkqhw7j4vf2j3c9wjcys5oa
Name:		helloworld
Service Mode:	Replicated
 Replicas:	1
Placement:
UpdateConfig:
 Parallelism:	1
 On failure:	pause
 Monitoring Period: 5s
 Max failure ratio: 0
 Update order:      stop-first
RollbackConfig:
 Parallelism:	1
 On failure:	pause
 Monitoring Period: 5s
 Max failure ratio: 0
 Rollback order:    stop-first
ContainerSpec:
 Image:		alpine:latest@sha256:7df6db5aa61ae9480f52f0b3a06a140ab98d427f86d8d5de0bedab9b8df6b1c0
 Args:		ping docker.com 
Resources:
Endpoint Mode:	vip
[root@dock0 ~]#


# amb docker service ps veiem quins nodes estan fent la feina

[root@dock0 ~]# docker service ps helloworld
ID                  NAME                IMAGE               NODE                DESIRED STATE       CURRENT STATE           ERROR               PORTS
kvd38wlawgqi        helloworld.1        alpine:latest       dock1               Running             Running 2 minutes ago                       
[root@dock0 ~]# 

# podem anar a dock1 i mirar


[root@dock1 ~]# docker ps
CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES
c1238fa443c6        alpine:latest       "ping docker.com"   2 minutes ago       Up 2 minutes                            helloworld.1.kvd38wlawgqixrvfmpg030ucl
[root@dock1 ~]#


# Canviem l'escala del servei 


[root@dock0 ~]# docker service scale helloworld=5
helloworld scaled to 5
overall progress: 5 out of 5 tasks 
1/5: running   
2/5: running   
3/5: running   
4/5: running   
5/5: running   
verify: Service converged 
[root@dock0 ~]#

# ara mirem

[root@dock0 ~]# docker service ps helloworld
ID                  NAME                IMAGE               NODE                DESIRED STATE       CURRENT STATE            ERROR               PORTS
kvd38wlawgqi        helloworld.1        alpine:latest       dock1               Running             Running 3 minutes ago                        
ovy1sruumitp        helloworld.2        alpine:latest       dock0               Running             Running 24 seconds ago                       
qbyg87iv4kqh        helloworld.3        alpine:latest       dock2               Running             Running 23 seconds ago                       
oaljhj6pyn6j        helloworld.4        alpine:latest       dock2               Running             Running 23 seconds ago                       
amz3t0kjaw5u        helloworld.5        alpine:latest       dock1               Running             Running 32 seconds ago                       
[root@dock0 ~]#


# els 5 processos s'ha repartit entre els 2 workers i el manager 
# ens carreguem el servei

[root@dock0 ~]# docker service rm helloworld
helloworld
[root@dock0 ~]#
# podem posar un node en drain (com a l'slurm)

docker node update --availability drain worker1

# el podem tornar a posar actiu

docker node update --availability active worker1

# routing mesh: publicar ports dels nodes fora del swarm

  docker service create \
  --name my-web \
  --publish published=8080,target=80 \
  --replicas 2 \
  nginx

# aquesta comanda engega 2 contenidor de nginx al swarm, accessible al port 8080 dels nodes del swarm   (published: es el port del node on es mapeja el target port del contenidor)

# Mirem
[root@dock0 ~]# docker service ls
ID                  NAME                MODE                REPLICAS            IMAGE               PORTS
tk0nktf2doch        my-web              replicated          2/2                 nginx:latest        *:8080->80/tcp
[root@dock0 ~]# 


ot@dock0 ~]# docker service ps my-web
ID                  NAME                IMAGE               NODE                DESIRED STATE       CURRENT STATE                ERROR               PORTS
lrv8zyl3zs9j        my-web.1            nginx:latest        dock1               Running             Running about a minute ago                       
v9g1h26meahv        my-web.2            nginx:latest        dock0               Running             Running about a minute ago                       
[root@dock0 ~]# 


# veiem que hi ha un nginx a dock0 i un nginx a dock1, pero si anem a dock2, podem accedir al servei:

[alfons@moebius ~]$ curl dock2:8080
<!DOCTYPE html>
<html>
<head>
<title>Welcome to nginx!</title>
<style>
    body {
        width: 35em;
        margin: 0 auto;
        font-family: Tahoma, Verdana, Arial, sans-serif;
    }
</style>
</head>
<body>
<h1>Welcome to nginx!</h1>
<p>If you see this page, the nginx web server is successfully installed and
working. Further configuration is required.</p>

<p>For online documentation and support please refer to
<a href="http://nginx.org/">nginx.org</a>.<br/>
Commercial support is available at
<a href="http://nginx.com/">nginx.com</a>.</p>

<p><em>Thank you for using nginx.</em></p>
</body>
</html>
[alfons@moebius ~]$ 

# es podria configurar un HAProxy per balancejar la carrega del server nginx entre els tres nodes del swarm (manager i workers)



